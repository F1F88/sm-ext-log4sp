# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os, sys

projectName = 'log4sp'

# smsdk_ext.cpp will be automatically added later
sourceFiles = [
  'src/extension.cpp',
  'src/log4sp/common.cpp',
  'src/log4sp/logger.cpp',
  'src/log4sp/adapter/logger_handler.cpp',
  'src/log4sp/adapter/sink_handler.cpp',
  'src/log4sp/command/root_console_command.cpp',
  'src/log4sp/command/root_console_command_handler.cpp',
  'src/log4sp/sinks/callback_sink.cpp',
  'src/natives/common.cpp',
  'src/natives/logger.cpp',
  'src/natives/sinks/sink.cpp',
  'src/natives/sinks/basic_file_sink.cpp',
  'src/natives/sinks/callback_sink.cpp',
  'src/natives/sinks/daily_file_sink.cpp',
  'src/natives/sinks/ringbuffer_sink.cpp',
  'src/natives/sinks/rotating_file_sink.cpp',
  'src/natives/sinks/server_console_sink.cpp',
  'src/natives/sinks/udp_sink.cpp',
]

###############
# Make sure to edit PackageScript, which copies your files to their appropriate locations
# Simple extensions do not need to modify past this point.

project = Extension.HL2Project(builder, projectName + '.ext')

if os.path.isfile(os.path.join(builder.currentSourcePath, 'sdk', 'smsdk_ext.cpp')):
  # Use the copy included in the project
  project.sources += [os.path.join('sdk', 'smsdk_ext.cpp')]
else:
  # Use the copy included with SM 1.6 and newer
  project.sources += [os.path.join(Extension.sm_root, 'public', 'smsdk_ext.cpp')]

project.sources += sourceFiles

for cxx in builder.targets:
  binary = Extension.HL2Config(builder, project, projectName + '.ext', cxx)



Extension.extensions = builder.Add(project)
